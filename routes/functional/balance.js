let sqldb = require('../db.js');let find = require('./findUser.js');let transaction = require('./generateTrans.js');let check=(userId,amountNeeded,cb)=>{    console.log(userId);    find.findById(userId,(output)=>{        if(output === null){            cb(null);        }else{            if(Number(output.balance) >= Number(amountNeeded)){                cb(output.balance);            }else{                cb(null);            }        }    });};let reduceBal=(userID,inHand,amount,t_p,tTran,cb)=>{    let newBalance =Number(inHand)-Number(amount);    let not =Number(tTran)+Number(1);    console.log(`transaction before ${tTran} trasnsaction after ${not}`);    sqldb.all('update users set balance=?,t_tran=? where id=?',[newBalance,not,userID],(error)=>{        if(error){            console.log('Balance not updated for Sender');            cb(null);        }else{            find.findById(userID,(sender)=>{                if(sender === null){                    cb(null);                }else{                    let t_id='PayArk'+'-'+userID+'-'+not;                    console.log('reduct => findid '+t_id+" "+not);                    transaction(userID,t_id,t_p,amount,inHand,newBalance,(err)=>{                        if(err === null){                            cb(null);                        }else{                            cb('OK')                        }                    });                }            });        }    });};let addBal=(userID,amount,t_p,cb)=>{    find.findById(userID,(output)=>{        if(output === null){            cb(null);        }else{            let not =Number(output.t_tran)+Number(1);            let newBalance = Number(output.balance)+Number(amount);            sqldb.all('update users set balance=?,t_tran = ? where id=?',[newBalance,not,userID],(error)=>{                if(error){                    console.log('Balance not updated for Receiver');                    cb(null);                }else{                    let t_id='PayArk'+'-'+userID+'-'+not;                    transaction(userID,t_id,t_p,amount,output.balance,newBalance,(err)=>{                        if(err === null){                            cb(null);                        }else{                            cb('OK')                        }                    });                }            });        }    });};module.exports ={check,reduceBal,addBal};